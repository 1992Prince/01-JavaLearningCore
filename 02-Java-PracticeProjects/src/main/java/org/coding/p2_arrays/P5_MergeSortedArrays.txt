88. Merge Sorted Array
**************************

You are given two integer arrays nums1 and nums2, sorted in non-decreasing order, and
two integers m and n, representing the number of elements in nums1 and nums2 respectively.

Merge nums1 and nums2 into a single array sorted in non-decreasing order.

Example 1:

Input: nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3
Output: [1,2,2,3,5,6]

üí° Analysis
*********************

1. Problem Understanding

You have two sorted arrays:

    - nums1 of size m + n, where only the first m elements are valid, and the last n slots are
      placeholders (zeros).

    - nums2 of size n, fully valid.

Task: Merge nums2 into nums1 so that nums1 becomes one fully sorted array of length m + n.

‚ö†Ô∏è Important: You cannot return a new array, you must modify nums1 in place.

-------------------------------------------------------------------------------
2. Key Observations

    - Both arrays are already sorted ‚Üí suggests two-pointer or merge process.

    - If we try merging from the front, we‚Äôd need to shift elements in nums1 repeatedly ‚Üí costly (O(m¬∑n)).

    - Better idea: Start filling from the end of nums1 (since it has empty slots at the back).

------------------------------------------------------------------------------------
Approach 1- Brute Force : copy all elements of nums2 to nums1 and then sort the nums1
------------------------------------------------------------------------------------
Approach 2 - create 3rd array with merged and using two pointers push elements there and
             then copy merged elements into nums1

             - Create a third array res of length m + n.

            -  Use two pointers i (for nums1 first m elements) and j (for nums2) and a pointer k for res.

             - Repeatedly compare nums1[i] and nums2[j], put the smaller into res[k], and advance the
                corresponding pointers.

             - When one array is exhausted, copy the remaining elements from the other into res.

             - Copy all m + n elements from res back into nums1.
------------------------------------------------------------------------------------



